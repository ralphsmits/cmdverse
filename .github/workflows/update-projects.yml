name: Update Projects JSON

on:
  workflow_dispatch:
    inputs:
      projectJson:
        description: 'JSON string of new project'
        required: true
        type: string

jobs:
  update-json:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Save project JSON
        run: |
          echo '${{ github.event.inputs.projectJson }}' > input.json

      - name: Validate JSON
        run: |
          python -c "import json; json.load(open('input.json')); print('✅ JSON valid')"

      - name: Create individual project JSON file
        run: |
          python - << 'EOF'
import json, os, re
from datetime import datetime

with open('input.json') as f:
    project = json.load(f)

slug = re.sub(r'[^a-z0-9-]', '', project.get('projectName','unnamed').lower().replace(' ','-'))
timestamp = datetime.now().strftime("%Y%m%d-%H%M%S")
filename = f"projects/{slug}-{timestamp}.json"
os.makedirs('projects', exist_ok=True)
with open(filename, 'w') as f:
    json.dump(project, f, indent=2)
print(f"✅ Created: {filename}")
EOF

      - name: Update projects index
        run: |
          python - << 'EOF'
import json, os, glob

index = []
for f in glob.glob("projects/*.json"):
    with open(f) as pf:
        data = json.load(pf)
        data["_file"] = os.path.basename(f)
        index.append(data)
index.sort(key=lambda x: x.get("projectName","").lower())
with open("projects-index.json","w") as out:
    json.dump(index,out,indent=2)
print(f"✅ Projects index updated: {len(index)} items")
EOF

      - name: Commit changes
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add projects/ projects-index.json
          if git diff --staged --quiet; then
            echo "No changes"
          else
            git commit -m "Add new project via workflow_dispatch"
            git push
          fi
